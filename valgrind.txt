==7448== Memcheck, a memory error detector
==7448== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==7448== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==7448== Command: python readGrid.py
==7448== Parent PID: 19217
==7448== 
==7448== 
==7448== Process terminating with default action of signal 2 (SIGINT)
==7448==    at 0x4C631A7: kill (syscall-template.S:120)
==7448==    by 0x4A8FC42: exit_sigint (main.c:633)
==7448==    by 0x4A8FC42: Py_RunMain (main.c:677)
==7448==    by 0x4A8FC42: pymain_main (main.c:696)
==7448==    by 0x4A8FC42: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== HEAP SUMMARY:
==7448==     in use at exit: 201,426 bytes in 258 blocks
==7448==   total heap usage: 2,781 allocs, 2,523 frees, 5,100,282 bytes allocated
==7448== 
==7448== 1 bytes in 1 blocks are still reachable in loss record 1 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ACD96B: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int, Dune::Python::IGA::Reader>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int (*)(Dune::Python::IGA::Reader)) (pybind11.h:297)
==7448==    by 0x5AC5EDD: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, , void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:100)
==7448==    by 0x5ABEF30: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def_property_readonly<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:1690)
==7448==    by 0x5AB396B: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2156)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 4 bytes in 1 blocks are still reachable in loss record 2 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD4225: pybind11::detail::type_caster_base<Dune::Python::IGA::Reader>::make_copy_constructor<Dune::Python::IGA::Reader, void>(Dune::Python::IGA::Reader const*)::{lambda(void const*)#1}::operator()(void const*) const (type_caster_base.h:994)
==7448==    by 0x5AD424C: pybind11::detail::type_caster_base<Dune::Python::IGA::Reader>::make_copy_constructor<Dune::Python::IGA::Reader, void>(Dune::Python::IGA::Reader const*)::{lambda(void const*)#1}::_FUN(void const*) (type_caster_base.h:994)
==7448==    by 0x5A9E3A4: pybind11::detail::type_caster_generic::cast(void const*, pybind11::return_value_policy, pybind11::handle, pybind11::detail::type_info const*, void* (*)(void const*), void* (*)(void const*), void const*) (type_caster_base.h:548)
==7448==    by 0x5ACE145: pybind11::detail::type_caster_base<Dune::Python::IGA::Reader>::cast(Dune::Python::IGA::Reader const*, pybind11::return_value_policy, pybind11::handle) (type_caster_base.h:953)
==7448==    by 0x5AC6395: pybind11::detail::type_caster_base<Dune::Python::IGA::Reader>::cast(Dune::Python::IGA::Reader const&, pybind11::return_value_policy, pybind11::handle) (type_caster_base.h:919)
==7448==    by 0x5ABF30A: pybind11::object pybind11::cast<Dune::Python::IGA::Reader&, 0>(Dune::Python::IGA::Reader&, pybind11::return_value_policy, pybind11::handle) (cast.h:1067)
==7448==    by 0x5AB3AE7: pybind11::enum_<Dune::Python::IGA::Reader>::value(char const*, Dune::Python::IGA::Reader, char const*) (pybind11.h:2178)
==7448==    by 0x5A95FB3: pybind11_init__iga(pybind11::module_&) (_iga.cc:11)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 7 bytes in 1 blocks are still reachable in loss record 3 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC6309: strndup (strndup.c:43)
==7448==    by 0x4C59DFC: _nl_find_locale (findlocale.c:310)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 4 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x4C59559: setlocale (setlocale.c:431)
==7448==    by 0x4A6683C: _Py_SetLocaleFromEnv (pylifecycle.c:436)
==7448==    by 0x4A63384: _PyPreConfig_Write (preconfig.c:980)
==7448==    by 0x4A66A40: _Py_PreInitializeFromPyArgv (pylifecycle.c:913)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 5 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4010ECD: malloc (rtld-malloc.h:56)
==7448==    by 0x4010ECD: allocate_dtv_entry (dl-tls.c:684)
==7448==    by 0x4010ECD: allocate_and_init (dl-tls.c:709)
==7448==    by 0x4010ECD: tls_get_addr_tail (dl-tls.c:907)
==7448==    by 0x4014467: __tls_get_addr (tls_get_addr.S:55)
==7448==    by 0x5A979C7: pybind11::handle::inc_ref_counter(unsigned long) (pytypes.h:290)
==7448==    by 0x5A9795B: pybind11::handle::inc_ref() const & (pytypes.h:248)
==7448==    by 0x5AC491E: pybind11::detail::pyobject_caster<pybind11::str>::cast(pybind11::handle const&, pybind11::return_value_policy, pybind11::handle) (cast.h:935)
==7448==    by 0x5ACEA53: pybind11::tuple pybind11::make_tuple<(pybind11::return_value_policy)1, pybind11::str&>(pybind11::str&) (cast.h:1214)
==7448==    by 0x5AC6F7B: pybind11::detail::simple_collector<(pybind11::return_value_policy)1>::simple_collector<pybind11::str&>(pybind11::str&) (cast.h:1452)
==7448==    by 0x5AC00A1: pybind11::detail::simple_collector<(pybind11::return_value_policy)1> pybind11::detail::collect_arguments<(pybind11::return_value_policy)1, pybind11::str&, void>(pybind11::str&) (cast.h:1605)
==7448==    by 0x5AB4ADF: pybind11::object pybind11::detail::object_api<pybind11::detail::accessor<pybind11::detail::accessor_policies::str_attr> >::operator()<(pybind11::return_value_policy)1, pybind11::str&>(pybind11::str&) const (cast.h:1631)
==7448==    by 0x5AADAC8: bool pybind11::detail::object_api<pybind11::handle>::contains<pybind11::str&>(pybind11::str&) const (pytypes.h:2369)
==7448==    by 0x5A9BF4C: pybind11::detail::get_internals() (internals.h:438)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 6 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5A9C069: pybind11::detail::get_internals() (internals.h:453)
==7448==    by 0x5A95E54: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C77C1: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C77C1: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C77C1: call_function (ceval.c:5891)
==7448==    by 0x48C77C1: _PyEval_EvalFrameDefault (ceval.c:4181)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C4E5F: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C4E5F: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C4E5F: call_function (ceval.c:5891)
==7448==    by 0x48C4E5F: _PyEval_EvalFrameDefault (ceval.c:4198)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 7 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A7D59D: PyThread_tss_alloc (thread.c:139)
==7448==    by 0x5A9C0C9: pybind11::detail::get_internals() (internals.h:463)
==7448==    by 0x5A95E54: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C77C1: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C77C1: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C77C1: call_function (ceval.c:5891)
==7448==    by 0x48C77C1: _PyEval_EvalFrameDefault (ceval.c:4181)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C4E5F: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C4E5F: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C4E5F: call_function (ceval.c:5891)
==7448==    by 0x48C4E5F: _PyEval_EvalFrameDefault (ceval.c:4198)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 8 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD5185: std::__new_allocator<pybind11::detail::type_info*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AC80EF: allocate (allocator.h:188)
==7448==    by 0x5AC80EF: std::allocator_traits<std::allocator<pybind11::detail::type_info*> >::allocate(std::allocator<pybind11::detail::type_info*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC0F47: std::_Vector_base<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >::_M_allocate(unsigned long) (stl_vector.h:378)
==7448==    by 0x5AC446F: pybind11::detail::type_info** std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >::_M_allocate_and_copy<pybind11::detail::type_info* const*>(unsigned long, pybind11::detail::type_info* const*, pybind11::detail::type_info* const*) (stl_vector.h:1614)
==7448==    by 0x5AB941F: void std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >::_M_assign_aux<pybind11::detail::type_info* const*>(pybind11::detail::type_info* const*, pybind11::detail::type_info* const*, std::forward_iterator_tag) (vector.tcc:318)
==7448==    by 0x5AB15D8: std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >::operator=(std::initializer_list<pybind11::detail::type_info*>) (stl_vector.h:785)
==7448==    by 0x5AA7849: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1326)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 9 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5A9C445: pybind11::detail::local_internals::local_internals() (internals.h:521)
==7448==    by 0x5A9C536: pybind11::detail::get_local_internals() (internals.h:536)
==7448==    by 0x5A9D164: pybind11::detail::get_local_type_info(std::type_index const&) (type_caster_base.h:197)
==7448==    by 0x5A9D25B: pybind11::detail::get_type_info(std::type_index const&, bool) (type_caster_base.h:218)
==7448==    by 0x5AA337B: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:436)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 10 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A7D59D: PyThread_tss_alloc (thread.c:139)
==7448==    by 0x5A9C349: pybind11::detail::local_internals::shared_loader_life_support_data::shared_loader_life_support_data() (internals.h:508)
==7448==    by 0x5A9C456: pybind11::detail::local_internals::local_internals() (internals.h:521)
==7448==    by 0x5A9C536: pybind11::detail::get_local_internals() (internals.h:536)
==7448==    by 0x5A9D164: pybind11::detail::get_local_type_info(std::type_index const&) (type_caster_base.h:197)
==7448==    by 0x5A9D25B: pybind11::detail::get_type_info(std::type_index const&, bool) (type_caster_base.h:218)
==7448==    by 0x5AA337B: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:436)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448== 
==7448== 8 bytes in 1 blocks are still reachable in loss record 11 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ACDC47: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC5FC7: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF024: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&) (pybind11.h:1558)
==7448==    by 0x5AB3988: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2157)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 9 bytes in 1 blocks are still reachable in loss record 12 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 11 bytes in 2 blocks are still reachable in loss record 13 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2D12: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:361)
==7448==    by 0x5ABD0D1: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 11 bytes in 2 blocks are still reachable in loss record 14 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2D12: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:361)
==7448==    by 0x5ABD35B: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 11 bytes in 2 blocks are still reachable in loss record 15 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2D12: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:361)
==7448==    by 0x5AD6B59: void pybind11::cpp_function::initialize<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, void, pybind11::detail::value_and_holder&, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AD3BCF: pybind11::cpp_function::cpp_function<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg, void>(pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5ACD61A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::detail::is_new_style_constructor, pybind11::arg>(char const*, pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:1558)
==7448==    by 0x5AC5E7F: void pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) && (init.h:287)
==7448==    by 0x5ABEEF3: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type (), pybind11::arg>(pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>&&, pybind11::arg const&) (pybind11.h:1609)
==7448==    by 0x5AB394E: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2155)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 11 bytes in 2 blocks are still reachable in loss record 16 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2D12: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:361)
==7448==    by 0x5AC631A: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, void, pybind11::detail::value_and_holder&, int, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5ABF294: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AB3A0D: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2159)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 12 bytes in 1 blocks are still reachable in loss record 17 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ABAB0A: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::dict, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::dict (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB2181: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AAA108: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1977)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 15 bytes in 1 blocks are still reachable in loss record 18 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x4CEBF70: tzset_internal (tzset.c:402)
==7448==    by 0x4CEC16E: __tz_convert (tzset.c:577)
==7448==    by 0x4A71A18: _PyTime_localtime (pytime.c:1113)
==7448==    by 0x4AD47CA: init_timezone (timemodule.c:1762)
==7448==    by 0x4AD497D: time_exec (timemodule.c:1926)
==7448==    by 0x4971733: PyModule_ExecDef (moduleobject.c:407)
==7448==    by 0x4A4D79A: _imp_exec_builtin (import.c.h:383)
==7448==    by 0x496F809: cfunction_vectorcall_O (methodobject.c:516)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 16 bytes in 1 blocks are still reachable in loss record 19 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD73C3: std::__new_allocator<std::_Fwd_list_node<void (*)(std::__exception_ptr::exception_ptr)> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5ACEDC0: allocate (allocator.h:188)
==7448==    by 0x5ACEDC0: std::allocator_traits<std::allocator<std::_Fwd_list_node<void (*)(std::__exception_ptr::exception_ptr)> > >::allocate(std::allocator<std::_Fwd_list_node<void (*)(std::__exception_ptr::exception_ptr)> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC7298: std::_Fwd_list_base<void (*)(std::__exception_ptr::exception_ptr), std::allocator<void (*)(std::__exception_ptr::exception_ptr)> >::_M_get_node() (forward_list.h:360)
==7448==    by 0x5AC02BA: std::_Fwd_list_node<void (*)(std::__exception_ptr::exception_ptr)>* std::_Fwd_list_base<void (*)(std::__exception_ptr::exception_ptr), std::allocator<void (*)(std::__exception_ptr::exception_ptr)> >::_M_create_node<void (*)(std::__exception_ptr::exception_ptr)>(void (*&&)(std::__exception_ptr::exception_ptr)) (forward_list.h:368)
==7448==    by 0x5AB4F5B: std::_Fwd_list_node_base* std::_Fwd_list_base<void (*)(std::__exception_ptr::exception_ptr), std::allocator<void (*)(std::__exception_ptr::exception_ptr)> >::_M_insert_after<void (*)(std::__exception_ptr::exception_ptr)>(std::_Fwd_list_const_iterator<void (*)(std::__exception_ptr::exception_ptr)>, void (*&&)(std::__exception_ptr::exception_ptr)) (forward_list.tcc:55)
==7448==    by 0x5AADF75: std::forward_list<void (*)(std::__exception_ptr::exception_ptr), std::allocator<void (*)(std::__exception_ptr::exception_ptr)> >::push_front(void (*&&)(std::__exception_ptr::exception_ptr)) (forward_list.h:885)
==7448==    by 0x5A9C1D5: pybind11::detail::get_internals() (internals.h:477)
==7448==    by 0x5A95E54: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 17 bytes in 1 blocks are still reachable in loss record 20 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C68153: __add_to_environ (setenv.c:217)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A667BF: _coerce_default_locale_settings (pylifecycle.c:319)
==7448==    by 0x4A667BF: _Py_CoerceLegacyLocale (pylifecycle.c:365)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 17 bytes in 1 blocks are still reachable in loss record 21 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CEC63A: __tzfile_read (tzfile.c:279)
==7448==    by 0x4CEBF83: tzset_internal (tzset.c:405)
==7448==    by 0x4CEC16E: __tz_convert (tzset.c:577)
==7448==    by 0x4A71A18: _PyTime_localtime (pytime.c:1113)
==7448==    by 0x4AD47CA: init_timezone (timemodule.c:1762)
==7448==    by 0x4AD497D: time_exec (timemodule.c:1926)
==7448==    by 0x4971733: PyModule_ExecDef (moduleobject.c:407)
==7448==    by 0x4A4D79A: _imp_exec_builtin (import.c.h:383)
==7448==    by 0x496F809: cfunction_vectorcall_O (methodobject.c:516)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 18 bytes in 3 blocks are still reachable in loss record 22 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ABA17F: void pybind11::cpp_function::initialize<pybind11::str (*&)(pybind11::handle), pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*&)(pybind11::handle), pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1CB7: pybind11::cpp_function::cpp_function<pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:91)
==7448==    by 0x5AA9E6E: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1943)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 20 bytes in 1 blocks are still reachable in loss record 23 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CEB620: __tzstring_len (tzset.c:98)
==7448==    by 0x4CECD3A: __tzfile_read (tzfile.c:412)
==7448==    by 0x4CEBF83: tzset_internal (tzset.c:405)
==7448==    by 0x4CEC16E: __tz_convert (tzset.c:577)
==7448==    by 0x4A71A18: _PyTime_localtime (pytime.c:1113)
==7448==    by 0x4AD47CA: init_timezone (timemodule.c:1762)
==7448==    by 0x4AD497D: time_exec (timemodule.c:1926)
==7448==    by 0x4971733: PyModule_ExecDef (moduleobject.c:407)
==7448==    by 0x4A4D79A: _imp_exec_builtin (import.c.h:383)
==7448==    by 0x496F809: cfunction_vectorcall_O (methodobject.c:516)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 22 bytes in 1 blocks are still reachable in loss record 24 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 22 bytes in 1 blocks are still reachable in loss record 25 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABA17F: void pybind11::cpp_function::initialize<pybind11::str (*&)(pybind11::handle), pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*&)(pybind11::handle), pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1CB7: pybind11::cpp_function::cpp_function<pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:91)
==7448==    by 0x5AA9E6E: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1943)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 22 bytes in 1 blocks are still reachable in loss record 26 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABA51C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1E9E: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9F4A: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1945)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 23 bytes in 2 blocks are still reachable in loss record 27 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ACDE93: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC606F: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF15A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&) (pybind11.h:1558)
==7448==    by 0x5AB39A5: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2158)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 24 bytes in 1 blocks are still reachable in loss record 28 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4D29B29: tsearch (tsearch.c:337)
==7448==    by 0x4C6817E: __add_to_environ (setenv.c:233)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A667BF: _coerce_default_locale_settings (pylifecycle.c:319)
==7448==    by 0x4A667BF: _Py_CoerceLegacyLocale (pylifecycle.c:365)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 24 bytes in 1 blocks are still reachable in loss record 29 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4D29AB5: tsearch (tsearch.c:337)
==7448==    by 0x4C6817E: __add_to_environ (setenv.c:233)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A9643A: os_putenv_impl (posixmodule.c:11013)
==7448==    by 0x4A9643A: os_putenv (posixmodule.c.h:6360)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C5F6B: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C5F6B: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C5F6B: call_function (ceval.c:5891)
==7448==    by 0x48C5F6B: _PyEval_EvalFrameDefault (ceval.c:4213)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4998D4E: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x4998D4E: vectorcall_unbound (typeobject.c:1629)
==7448==    by 0x4998D4E: vectorcall_method (typeobject.c:1661)
==7448==    by 0x4998EFA: slot_mp_ass_subscript (typeobject.c:7273)
==7448==    by 0x48C16D0: _PyEval_EvalFrameDefault (ceval.c:2372)
==7448==    by 0x4A2315D: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2315D: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4A2315D: PyEval_EvalCode (ceval.c:1134)
==7448== 
==7448== 24 bytes in 1 blocks are still reachable in loss record 30 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD87E2: std::__new_allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD22E9: allocate (allocator.h:188)
==7448==    by 0x5AD22E9: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5ACABD3: std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::type_index const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::type_index const&>&&, std::tuple<>&&) (hashtable_policy.h:1963)
==7448==    by 0x5AC403C: std::_Hashtable<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<std::type_index const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> > >*, std::piecewise_construct_t const&, std::tuple<std::type_index const&>&&, std::tuple<>&&) (hashtable.h:308)
==7448==    by 0x5AB918B: std::__detail::_Map_base<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](std::type_index const&) (hashtable_policy.h:778)
==7448==    by 0x5AB1552: std::unordered_map<std::type_index, pybind11::detail::type_info*, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> > >::operator[](std::type_index const&) (unordered_map.h:980)
==7448==    by 0x5AA77EF: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1324)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 24 bytes in 1 blocks are still reachable in loss record 31 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA1E6: std::__new_allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD7C59: allocate (allocator.h:188)
==7448==    by 0x5AD7C59: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD55D5: std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> > >::_M_allocate_node<void*&, pybind11::detail::instance*&>(void*&, pybind11::detail::instance*&) (hashtable_policy.h:1963)
==7448==    by 0x5AD0548: std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_Scoped_node::_Scoped_node<void*&, pybind11::detail::instance*&>(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> > >*, void*&, pybind11::detail::instance*&) (hashtable.h:308)
==7448==    by 0x5AC9360: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_emplace<void*&, pybind11::detail::instance*&>(std::__detail::_Node_const_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false>, std::integral_constant<bool, false>, void*&, pybind11::detail::instance*&) (hashtable.h:2099)
==7448==    by 0x5AC21D9: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_emplace<void*&, pybind11::detail::instance*&>(std::integral_constant<bool, false>, void*&, pybind11::detail::instance*&) (hashtable.h:869)
==7448==    by 0x5AB706C: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::emplace<void*&, pybind11::detail::instance*&>(void*&, pybind11::detail::instance*&) (hashtable.h:950)
==7448==    by 0x5AAFE49: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::unordered_multimap<void const*, pybind11::detail::instance*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> > >::emplace<void*&, pybind11::detail::instance*&>(void*&, pybind11::detail::instance*&) (unordered_map.h:1526)
==7448==    by 0x5AA08EC: pybind11::detail::register_instance_impl(void*, pybind11::detail::instance*) (class.h:316)
==7448==    by 0x5AA09C2: pybind11::detail::register_instance(pybind11::detail::instance*, void*, pybind11::detail::type_info const*) (class.h:332)
==7448==    by 0x5AC5C80: pybind11::class_<Dune::Python::IGA::Reader>::init_instance(pybind11::detail::instance*, void const*) (pybind11.h:1847)
==7448== 
==7448== 27 bytes in 1 blocks are still reachable in loss record 32 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FCCC: _nl_make_l10nflist (l10nflist.c:166)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 27 bytes in 1 blocks are still reachable in loss record 33 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABA17F: void pybind11::cpp_function::initialize<pybind11::str (*&)(pybind11::handle), pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*&)(pybind11::handle), pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1CB7: pybind11::cpp_function::cpp_function<pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:91)
==7448==    by 0x5AA9E6E: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1943)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 27 bytes in 1 blocks are still reachable in loss record 34 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABA51C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1E9E: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9F4A: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1945)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 30 bytes in 1 blocks are still reachable in loss record 35 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABA7D2: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB1F9F: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AA9FF8: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1954)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 31 bytes in 1 blocks are still reachable in loss record 36 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ACE234: std::__new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5ABF5F0: allocate (allocator.h:188)
==7448==    by 0x5ABF5F0: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AB5F31: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:155)
==7448==    by 0x5ABFC0E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:328)
==7448==    by 0x5AB6041: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (basic_string.tcc:420)
==7448==    by 0x5AB3DC8: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) (basic_string.h:1437)
==7448==    by 0x5AAD0E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*) (basic_string.h:3555)
==7448==    by 0x5AA1C7C: pybind11::detail::make_new_python_type(pybind11::detail::type_record const&) (class.h:642)
==7448==    by 0x5AA75E8: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1301)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448== 
==7448== 31 bytes in 1 blocks are still reachable in loss record 37 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 31 bytes in 1 blocks are still reachable in loss record 38 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABE2D6: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB303C: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB219: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2063)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 39 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CE443F: __wcsmbs_load_conv (wcsmbsload.c:169)
==7448==    by 0x4CD8CB8: get_gconv_fcts (wcsmbsload.h:71)
==7448==    by 0x4CD8CB8: wcsrtombs (wcsrtombs.c:52)
==7448==    by 0x4C73390: wcstombs (wcstombs.c:34)
==7448==    by 0x4A8A468: _Py_wfopen (fileutils.c:1585)
==7448==    by 0x4A8D508: calculate_open_pyenv (getpath.c:1218)
==7448==    by 0x4A8D508: calculate_read_pyenv (getpath.c:1264)
==7448==    by 0x4A8D508: calculate_path (getpath.c:1509)
==7448==    by 0x4A8D508: _PyPathConfig_Calculate (getpath.c:1602)
==7448==    by 0x4A6110D: pathconfig_init (pathconfig.c:354)
==7448==    by 0x4A6110D: config_init_pathconfig (pathconfig.c:369)
==7448==    by 0x4A6110D: _PyConfig_InitPathConfig (pathconfig.c:438)
==7448==    by 0x4A65503: init_interp_main (pylifecycle.c:1082)
==7448==    by 0x4A663F4: pyinit_main (pylifecycle.c:1195)
==7448==    by 0x4A6783A: Py_InitializeFromConfig (pylifecycle.c:1226)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 40 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 41 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABA17F: void pybind11::cpp_function::initialize<pybind11::str (*&)(pybind11::handle), pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*&)(pybind11::handle), pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1CB7: pybind11::cpp_function::cpp_function<pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:91)
==7448==    by 0x5AA9E6E: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1943)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 42 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABA51C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1E9E: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9F4A: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1945)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 43 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABA7D2: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB1F9F: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AA9FF8: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1954)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 44 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABAB0A: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::dict, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::dict (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB2181: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AAA108: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1977)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 45 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABD0D1: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 46 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABD35B: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 47 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABE02C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB2FC6: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB187: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2060)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 48 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ABE2D6: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB303C: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB219: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2063)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 49 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5AD6B59: void pybind11::cpp_function::initialize<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, void, pybind11::detail::value_and_holder&, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AD3BCF: pybind11::cpp_function::cpp_function<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg, void>(pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5ACD61A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::detail::is_new_style_constructor, pybind11::arg>(char const*, pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:1558)
==7448==    by 0x5AC5E7F: void pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) && (init.h:287)
==7448==    by 0x5ABEEF3: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type (), pybind11::arg>(pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>&&, pybind11::arg const&) (pybind11.h:1609)
==7448==    by 0x5AB394E: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2155)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 50 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ACD96B: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int, Dune::Python::IGA::Reader>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int (*)(Dune::Python::IGA::Reader)) (pybind11.h:297)
==7448==    by 0x5AC5EDD: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, , void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:100)
==7448==    by 0x5ABEF30: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def_property_readonly<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:1690)
==7448==    by 0x5AB396B: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2156)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 51 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ACDC47: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC5FC7: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF024: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&) (pybind11.h:1558)
==7448==    by 0x5AB3988: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2157)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 52 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5ACDE93: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC606F: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF15A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&) (pybind11.h:1558)
==7448==    by 0x5AB39A5: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2158)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 32 bytes in 1 blocks are still reachable in loss record 53 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA3A2E: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:490)
==7448==    by 0x5AC631A: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, void, pybind11::detail::value_and_holder&, int, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5ABF294: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AB3A0D: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2159)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 35 bytes in 1 blocks are still reachable in loss record 54 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABAB0A: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::dict, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::dict (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB2181: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AAA108: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1977)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 35 bytes in 1 blocks are still reachable in loss record 55 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABE02C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB2FC6: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB187: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2060)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 37 bytes in 1 blocks are still reachable in loss record 56 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ACD96B: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int, Dune::Python::IGA::Reader>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int (*)(Dune::Python::IGA::Reader)) (pybind11.h:297)
==7448==    by 0x5AC5EDD: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, , void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:100)
==7448==    by 0x5ABEF30: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def_property_readonly<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:1690)
==7448==    by 0x5AB396B: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2156)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 38 bytes in 1 blocks are still reachable in loss record 57 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FCCC: _nl_make_l10nflist (l10nflist.c:166)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 38 bytes in 1 blocks are still reachable in loss record 58 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABD0D1: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 38 bytes in 1 blocks are still reachable in loss record 59 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABD35B: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 40 bytes in 1 blocks are still reachable in loss record 60 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD9A5D: std::__new_allocator<std::_Fwd_list_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD5B67: allocate (allocator.h:188)
==7448==    by 0x5AD5B67: std::allocator_traits<std::allocator<std::_Fwd_list_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(std::allocator<std::_Fwd_list_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD10A8: std::_Fwd_list_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_node() (forward_list.h:360)
==7448==    by 0x5AC9E1C: std::_Fwd_list_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >* std::_Fwd_list_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_create_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (forward_list.h:368)
==7448==    by 0x5AC2ACB: std::_Fwd_list_node_base* std::_Fwd_list_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_after<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::_Fwd_list_const_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (forward_list.tcc:55)
==7448==    by 0x5AB788D: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::forward_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_front<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (forward_list.h:859)
==7448==    by 0x5AB0208: char const* pybind11::detail::c_str<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (internals.h:547)
==7448==    by 0x5AA1CC6: pybind11::detail::make_new_python_type(pybind11::detail::type_record const&) (class.h:640)
==7448==    by 0x5AA75E8: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1301)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448== 
==7448== 40 bytes in 1 blocks are still reachable in loss record 61 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD864D: std::__new_allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD2003: allocate (allocator.h:188)
==7448==    by 0x5AD2003: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5ACA907: std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::type_index const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::type_index const&>&&, std::tuple<>&&) (hashtable_policy.h:1963)
==7448==    by 0x5AC3E4C: std::_Hashtable<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<std::type_index const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> > >*, std::piecewise_construct_t const&, std::tuple<std::type_index const&>&&, std::tuple<>&&) (hashtable.h:308)
==7448==    by 0x5AB9061: std::__detail::_Map_base<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](std::type_index const&) (hashtable_policy.h:778)
==7448==    by 0x5AB152C: std::unordered_map<std::type_index, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> >, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > > >::operator[](std::type_index const&) (unordered_map.h:980)
==7448==    by 0x5AA7792: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1320)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 40 bytes in 1 blocks are still reachable in loss record 62 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD8959: std::__new_allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD25E8: allocate (allocator.h:188)
==7448==    by 0x5AD25E8: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5ACAEBB: std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<_typeobject*&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<_typeobject*&&>&&, std::tuple<>&&) (hashtable_policy.h:1963)
==7448==    by 0x5AC423E: std::_Hashtable<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<_typeobject*&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> > >*, std::piecewise_construct_t const&, std::tuple<_typeobject*&&>&&, std::tuple<>&&) (hashtable.h:308)
==7448==    by 0x5AB92C0: std::__detail::_Map_base<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](_typeobject*&&) (hashtable_policy.h:805)
==7448==    by 0x5AB1581: std::unordered_map<_typeobject*, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >, std::hash<_typeobject*>, std::equal_to<_typeobject*>, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > > >::operator[](_typeobject*&&) (unordered_map.h:984)
==7448==    by 0x5AA782C: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1326)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448== 
==7448== 44 bytes in 1 blocks are still reachable in loss record 63 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ACDC47: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC5FC7: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF024: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&) (pybind11.h:1558)
==7448==    by 0x5AB3988: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2157)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 45 bytes in 1 blocks are still reachable in loss record 64 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABD0D1: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 45 bytes in 1 blocks are still reachable in loss record 65 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ABD35B: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 45 bytes in 2 blocks are still reachable in loss record 66 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABA7D2: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (*)(pybind11::handle), pybind11::name const&) (pybind11.h:297)
==7448==    by 0x5AB1F9F: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AA9FF8: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1954)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 45 bytes in 5 blocks are still reachable in loss record 67 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA2C64: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:355)
==7448==    by 0x5ABD0D1: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 46 bytes in 1 blocks are still reachable in loss record 68 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5ACDE93: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:297)
==7448==    by 0x5AC606F: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF15A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&) (pybind11.h:1558)
==7448==    by 0x5AB39A5: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2158)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448== 
==7448== 48 bytes in 1 blocks are still reachable in loss record 69 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FE62: _nl_make_l10nflist (l10nflist.c:242)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 48 bytes in 2 blocks are possibly lost in loss record 70 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4D29AB5: tsearch (tsearch.c:337)
==7448==    by 0x4C6817E: __add_to_environ (setenv.c:233)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A9643A: os_putenv_impl (posixmodule.c:11013)
==7448==    by 0x4A9643A: os_putenv (posixmodule.c.h:6360)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C5F6B: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C5F6B: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C5F6B: call_function (ceval.c:5891)
==7448==    by 0x48C5F6B: _PyEval_EvalFrameDefault (ceval.c:4213)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4998D4E: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x4998D4E: vectorcall_unbound (typeobject.c:1629)
==7448==    by 0x4998D4E: vectorcall_method (typeobject.c:1661)
==7448==    by 0x4998EFA: slot_mp_ass_subscript (typeobject.c:7273)
==7448==    by 0x48C16D0: _PyEval_EvalFrameDefault (ceval.c:2372)
==7448==    by 0x4A2315D: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2315D: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4A2315D: PyEval_EvalCode (ceval.c:1134)
==7448== 
==7448== 56 bytes in 1 blocks are still reachable in loss record 71 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD742F: std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> >::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5ACEF56: allocate (allocator.h:188)
==7448==    by 0x5ACEF56: std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> >&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC74B3: std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) (hashtable_policy.h:1963)
==7448==    by 0x5AC0480: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> > >*, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&) (hashtable.h:308)
==7448==    by 0x5AB504A: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (hashtable_policy.h:805)
==7448==    by 0x5AADFAB: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (unordered_map.h:984)
==7448==    by 0x5A9C413: pybind11::detail::local_internals::local_internals() (internals.h:519)
==7448==    by 0x5A9C536: pybind11::detail::get_local_internals() (internals.h:536)
==7448==    by 0x5A9D164: pybind11::detail::get_local_type_info(std::type_index const&) (type_caster_base.h:197)
==7448==    by 0x5A9D25B: pybind11::detail::get_type_info(std::type_index const&, bool) (type_caster_base.h:218)
==7448==    by 0x5AA337B: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:436)
==7448== 
==7448== 58 bytes in 1 blocks are still reachable in loss record 72 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5AD6B59: void pybind11::cpp_function::initialize<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, void, pybind11::detail::value_and_holder&, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5AD3BCF: pybind11::cpp_function::cpp_function<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg, void>(pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5ACD61A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::detail::is_new_style_constructor, pybind11::arg>(char const*, pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:1558)
==7448==    by 0x5AC5E7F: void pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) && (init.h:287)
==7448==    by 0x5ABEEF3: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type (), pybind11::arg>(pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>&&, pybind11::arg const&) (pybind11.h:1609)
==7448==    by 0x5AB394E: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2155)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448== 
==7448== 62 bytes in 1 blocks are still reachable in loss record 73 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA422A: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:603)
==7448==    by 0x5AC631A: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, void, pybind11::detail::value_and_holder&, int, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:297)
==7448==    by 0x5ABF294: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AB3A0D: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2159)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 64 bytes in 1 blocks are still reachable in loss record 74 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD54BD: std::__new_allocator<pybind11::detail::argument_record>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AC8944: allocate (allocator.h:188)
==7448==    by 0x5AC8944: std::allocator_traits<std::allocator<pybind11::detail::argument_record> >::allocate(std::allocator<pybind11::detail::argument_record>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC1B1D: std::_Vector_base<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_allocate(unsigned long) (stl_vector.h:378)
==7448==    by 0x5AB6B2F: void std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_realloc_insert<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(__gnu_cxx::__normal_iterator<pybind11::detail::argument_record*, std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> > >, char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:453)
==7448==    by 0x5AAF9EB: pybind11::detail::argument_record& std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::emplace_back<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:123)
==7448==    by 0x5A9FB11: pybind11::detail::process_attribute<pybind11::arg, void>::init(pybind11::arg const&, pybind11::detail::function_record*) (attr.h:467)
==7448==    by 0x5AC50B5: pybind11::detail::process_attributes<pybind11::name, pybind11::is_method, pybind11::arg>::init(pybind11::name const&, pybind11::is_method const&, pybind11::arg const&, pybind11::detail::function_record*) (attr.h:637)
==7448==    by 0x5ABD07A: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:267)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448== 
==7448== 64 bytes in 1 blocks are still reachable in loss record 75 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD54BD: std::__new_allocator<pybind11::detail::argument_record>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AC8944: allocate (allocator.h:188)
==7448==    by 0x5AC8944: std::allocator_traits<std::allocator<pybind11::detail::argument_record> >::allocate(std::allocator<pybind11::detail::argument_record>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC1B1D: std::_Vector_base<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_allocate(unsigned long) (stl_vector.h:378)
==7448==    by 0x5AB6B2F: void std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_realloc_insert<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(__gnu_cxx::__normal_iterator<pybind11::detail::argument_record*, std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> > >, char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:453)
==7448==    by 0x5AAF9EB: pybind11::detail::argument_record& std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::emplace_back<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:123)
==7448==    by 0x5A9FB11: pybind11::detail::process_attribute<pybind11::arg, void>::init(pybind11::arg const&, pybind11::detail::function_record*) (attr.h:467)
==7448==    by 0x5AC50B5: pybind11::detail::process_attributes<pybind11::name, pybind11::is_method, pybind11::arg>::init(pybind11::name const&, pybind11::is_method const&, pybind11::arg const&, pybind11::detail::function_record*) (attr.h:637)
==7448==    by 0x5ABD304: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:267)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448== 
==7448== 64 bytes in 1 blocks are still reachable in loss record 76 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD54BD: std::__new_allocator<pybind11::detail::argument_record>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AC8944: allocate (allocator.h:188)
==7448==    by 0x5AC8944: std::allocator_traits<std::allocator<pybind11::detail::argument_record> >::allocate(std::allocator<pybind11::detail::argument_record>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC1B1D: std::_Vector_base<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_allocate(unsigned long) (stl_vector.h:378)
==7448==    by 0x5AB6B2F: void std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_realloc_insert<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(__gnu_cxx::__normal_iterator<pybind11::detail::argument_record*, std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> > >, char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:453)
==7448==    by 0x5AAF9EB: pybind11::detail::argument_record& std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::emplace_back<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:123)
==7448==    by 0x5A9FB11: pybind11::detail::process_attribute<pybind11::arg, void>::init(pybind11::arg const&, pybind11::detail::function_record*) (attr.h:467)
==7448==    by 0x5AD8EFB: pybind11::detail::process_attributes<pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>::init(pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&, pybind11::detail::function_record*) (attr.h:637)
==7448==    by 0x5AD6B02: void pybind11::cpp_function::initialize<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, void, pybind11::detail::value_and_holder&, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:267)
==7448==    by 0x5AD3BCF: pybind11::cpp_function::cpp_function<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg, void>(pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5ACD61A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::detail::is_new_style_constructor, pybind11::arg>(char const*, pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:1558)
==7448==    by 0x5AC5E7F: void pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) && (init.h:287)
==7448== 
==7448== 64 bytes in 1 blocks are still reachable in loss record 77 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AD54BD: std::__new_allocator<pybind11::detail::argument_record>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AC8944: allocate (allocator.h:188)
==7448==    by 0x5AC8944: std::allocator_traits<std::allocator<pybind11::detail::argument_record> >::allocate(std::allocator<pybind11::detail::argument_record>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AC1B1D: std::_Vector_base<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_allocate(unsigned long) (stl_vector.h:378)
==7448==    by 0x5AB6B2F: void std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::_M_realloc_insert<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(__gnu_cxx::__normal_iterator<pybind11::detail::argument_record*, std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> > >, char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:453)
==7448==    by 0x5AAF9EB: pybind11::detail::argument_record& std::vector<pybind11::detail::argument_record, std::allocator<pybind11::detail::argument_record> >::emplace_back<char const* const&, decltype(nullptr), pybind11::handle, bool, bool const&>(char const* const&, decltype(nullptr)&&, pybind11::handle&&, bool&&, bool const&) (vector.tcc:123)
==7448==    by 0x5A9FB11: pybind11::detail::process_attribute<pybind11::arg, void>::init(pybind11::arg const&, pybind11::detail::function_record*) (attr.h:467)
==7448==    by 0x5ACE0CF: pybind11::detail::process_attributes<pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>::init(pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&, pybind11::detail::function_record*) (attr.h:637)
==7448==    by 0x5AC62C3: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, void, pybind11::detail::value_and_holder&, int, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:267)
==7448==    by 0x5ABF294: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AB3A0D: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2159)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448== 
==7448== 65 bytes in 2 blocks are still reachable in loss record 78 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FCCC: _nl_make_l10nflist (l10nflist.c:166)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 71 bytes in 3 blocks are still reachable in loss record 79 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C68153: __add_to_environ (setenv.c:217)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A9643A: os_putenv_impl (posixmodule.c:11013)
==7448==    by 0x4A9643A: os_putenv (posixmodule.c.h:6360)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C5F6B: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C5F6B: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C5F6B: call_function (ceval.c:5891)
==7448==    by 0x48C5F6B: _PyEval_EvalFrameDefault (ceval.c:4213)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4998D4E: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x4998D4E: vectorcall_unbound (typeobject.c:1629)
==7448==    by 0x4998D4E: vectorcall_method (typeobject.c:1661)
==7448==    by 0x4998EFA: slot_mp_ass_subscript (typeobject.c:7273)
==7448==    by 0x48C16D0: _PyEval_EvalFrameDefault (ceval.c:2372)
==7448==    by 0x4A2315D: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2315D: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4A2315D: PyEval_EvalCode (ceval.c:1134)
==7448==    by 0x4A6D048: run_eval_code_obj (pythonrun.c:1291)
==7448==    by 0x4A6D048: run_mod (pythonrun.c:1312)
==7448== 
==7448== 72 bytes in 1 blocks are still reachable in loss record 80 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FE62: _nl_make_l10nflist (l10nflist.c:242)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 72 bytes in 1 blocks are still reachable in loss record 81 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400606B: malloc (rtld-malloc.h:56)
==7448==    by 0x400606B: decompose_rpath (dl-load.c:644)
==7448==    by 0x400824B: _dl_map_object (dl-load.c:2111)
==7448==    by 0x4002280: openaux (dl-deps.c:64)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x40025E9: _dl_map_object_deps (dl-deps.c:232)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448== 
==7448== 72 bytes in 1 blocks are still reachable in loss record 82 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5A9C525: pybind11::detail::get_local_internals() (internals.h:536)
==7448==    by 0x5A9D164: pybind11::detail::get_local_type_info(std::type_index const&) (type_caster_base.h:197)
==7448==    by 0x5A9D25B: pybind11::detail::get_type_info(std::type_index const&, bool) (type_caster_base.h:218)
==7448==    by 0x5AA337B: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:436)
==7448==    by 0x5AB9E3C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448== 
==7448== 73 bytes in 2 blocks are still reachable in loss record 83 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x402381A: malloc (rtld-malloc.h:56)
==7448==    by 0x402381A: strdup (strdup.c:42)
==7448==    by 0x40134F4: _dl_load_cache_lookup (dl-cache.c:525)
==7448==    by 0x4008282: _dl_map_object (dl-load.c:2139)
==7448==    by 0x4002280: openaux (dl-deps.c:64)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x40025E9: _dl_map_object_deps (dl-deps.c:232)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448== 
==7448== 73 bytes in 2 blocks are still reachable in loss record 84 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400B038: malloc (rtld-malloc.h:56)
==7448==    by 0x400B038: _dl_new_object (dl-object.c:199)
==7448==    by 0x400671E: _dl_map_object_from_fd (dl-load.c:1063)
==7448==    by 0x4008164: _dl_map_object (dl-load.c:2272)
==7448==    by 0x4002280: openaux (dl-deps.c:64)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x40025E9: _dl_map_object_deps (dl-deps.c:232)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448== 
==7448== 88 bytes in 1 blocks are still reachable in loss record 85 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400A356: malloc (rtld-malloc.h:56)
==7448==    by 0x400A356: add_dependency (dl-lookup.c:675)
==7448==    by 0x400A356: _dl_lookup_symbol_x (dl-lookup.c:845)
==7448==    by 0x400E500: resolve_map (dl-reloc.c:190)
==7448==    by 0x400E500: elf_machine_rela (dl-machine.h:271)
==7448==    by 0x400E500: elf_dynamic_do_Rela (do-rel.h:147)
==7448==    by 0x400E500: _dl_relocate_object (dl-reloc.c:301)
==7448==    by 0x400BCF9: dl_open_worker_begin (dl-open.c:702)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448== 
==7448== 104 bytes in 1 blocks are still reachable in loss record 86 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA625: std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD93E6: allocate (allocator.h:188)
==7448==    by 0x5AD93E6: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD8715: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:2017)
==7448==    by 0x5AD6232: std::_Hashtable<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:443)
==7448==    by 0x5AD20FE: std::_Hashtable<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2562)
==7448==    by 0x5ACAA13: std::_Hashtable<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2541)
==7448==    by 0x5AC3F1E: std::_Hashtable<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, false>*, unsigned long) (hashtable.h:2155)
==7448==    by 0x5AB907F: std::__detail::_Map_base<std::type_index, std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > >, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](std::type_index const&) (hashtable_policy.h:785)
==7448==    by 0x5AB152C: std::unordered_map<std::type_index, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> >, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, std::vector<bool (*)(_object*, void*&), std::allocator<bool (*)(_object*, void*&)> > > > >::operator[](std::type_index const&) (unordered_map.h:980)
==7448==    by 0x5AA7792: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1320)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448== 
==7448== 104 bytes in 1 blocks are still reachable in loss record 87 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA625: std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD93E6: allocate (allocator.h:188)
==7448==    by 0x5AD93E6: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD888B: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:2017)
==7448==    by 0x5AD632C: std::_Hashtable<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:443)
==7448==    by 0x5AD23E4: std::_Hashtable<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2562)
==7448==    by 0x5ACACDF: std::_Hashtable<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2541)
==7448==    by 0x5AC410E: std::_Hashtable<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::type_index const, pybind11::detail::type_info*>, false>*, unsigned long) (hashtable.h:2155)
==7448==    by 0x5AB91A9: std::__detail::_Map_base<std::type_index, std::pair<std::type_index const, pybind11::detail::type_info*>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> >, std::__detail::_Select1st, std::equal_to<std::type_index>, std::hash<std::type_index>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](std::type_index const&) (hashtable_policy.h:785)
==7448==    by 0x5AB1552: std::unordered_map<std::type_index, pybind11::detail::type_info*, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, pybind11::detail::type_info*> > >::operator[](std::type_index const&) (unordered_map.h:980)
==7448==    by 0x5AA77EF: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1324)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448== 
==7448== 104 bytes in 1 blocks are still reachable in loss record 88 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA625: std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD93E6: allocate (allocator.h:188)
==7448==    by 0x5AD93E6: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD8A21: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:2017)
==7448==    by 0x5AD6472: std::_Hashtable<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:443)
==7448==    by 0x5AD26E2: std::_Hashtable<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2562)
==7448==    by 0x5ACAFC7: std::_Hashtable<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2541)
==7448==    by 0x5AC4310: std::_Hashtable<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, false>*, unsigned long) (hashtable.h:2155)
==7448==    by 0x5AB92DE: std::__detail::_Map_base<_typeobject*, std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > >, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > >, std::__detail::_Select1st, std::equal_to<_typeobject*>, std::hash<_typeobject*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](_typeobject*&&) (hashtable_policy.h:812)
==7448==    by 0x5AB1581: std::unordered_map<_typeobject*, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> >, std::hash<_typeobject*>, std::equal_to<_typeobject*>, std::allocator<std::pair<_typeobject* const, std::vector<pybind11::detail::type_info*, std::allocator<pybind11::detail::type_info*> > > > >::operator[](_typeobject*&&) (unordered_map.h:984)
==7448==    by 0x5AA782C: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1326)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448== 
==7448== 104 bytes in 1 blocks are still reachable in loss record 89 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA625: std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD93E6: allocate (allocator.h:188)
==7448==    by 0x5AD93E6: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5AD74F7: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:2017)
==7448==    by 0x5AD4BC8: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:443)
==7448==    by 0x5ACF050: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2562)
==7448==    by 0x5AC75BF: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2541)
==7448==    by 0x5AC0552: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, true>*, unsigned long) (hashtable.h:2155)
==7448==    by 0x5AB5068: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (hashtable_policy.h:812)
==7448==    by 0x5AADFAB: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, void*> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (unordered_map.h:984)
==7448==    by 0x5A9C413: pybind11::detail::local_internals::local_internals() (internals.h:519)
==7448==    by 0x5A9C536: pybind11::detail::get_local_internals() (internals.h:536)
==7448== 
==7448== 104 bytes in 1 blocks are still reachable in loss record 90 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5ADA625: std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==7448==    by 0x5AD93E6: allocate (allocator.h:188)
==7448==    by 0x5AD93E6: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
==7448==    by 0x5ADA26F: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:2017)
==7448==    by 0x5AD9944: std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_allocate_buckets(unsigned long) (hashtable.h:443)
==7448==    by 0x5AD7CEC: std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>) (hashtable.h:2605)
==7448==    by 0x5AD5769: std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2541)
==7448==    by 0x5AD0875: std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false>*, unsigned long, std::__detail::_Hash_node<std::pair<void const* const, pybind11::detail::instance*>, false>*) (hashtable.h:2183)
==7448==    by 0x5AC93BD: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_emplace<void*&, pybind11::detail::instance*&>(std::__detail::_Node_const_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false>, std::integral_constant<bool, false>, void*&, pybind11::detail::instance*&) (hashtable.h:2104)
==7448==    by 0x5AC21D9: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::_M_emplace<void*&, pybind11::detail::instance*&>(std::integral_constant<bool, false>, void*&, pybind11::detail::instance*&) (hashtable.h:869)
==7448==    by 0x5AB706C: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::_Hashtable<void const*, std::pair<void const* const, pybind11::detail::instance*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, false> >::emplace<void*&, pybind11::detail::instance*&>(void*&, pybind11::detail::instance*&) (hashtable.h:950)
==7448==    by 0x5AAFE49: std::__detail::_Node_iterator<std::pair<void const* const, pybind11::detail::instance*>, false, false> std::unordered_multimap<void const*, pybind11::detail::instance*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<std::pair<void const* const, pybind11::detail::instance*> > >::emplace<void*&, pybind11::detail::instance*&>(void*&, pybind11::detail::instance*&) (unordered_map.h:1526)
==7448== 
==7448== 112 bytes in 2 blocks are still reachable in loss record 91 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5FE62: _nl_make_l10nflist (l10nflist.c:242)
==7448==    by 0x4C5FF90: _nl_make_l10nflist (l10nflist.c:285)
==7448==    by 0x4C59EFE: _nl_find_locale (findlocale.c:214)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 119 bytes in 2 blocks are still reachable in loss record 92 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x402381A: malloc (rtld-malloc.h:56)
==7448==    by 0x402381A: strdup (strdup.c:42)
==7448==    by 0x40080DD: _dl_map_object (dl-load.c:2205)
==7448==    by 0x400BAF4: dl_open_worker_begin (dl-open.c:534)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448== 
==7448== 119 bytes in 2 blocks are still reachable in loss record 93 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400B038: malloc (rtld-malloc.h:56)
==7448==    by 0x400B038: _dl_new_object (dl-object.c:199)
==7448==    by 0x400671E: _dl_map_object_from_fd (dl-load.c:1063)
==7448==    by 0x4008164: _dl_map_object (dl-load.c:2272)
==7448==    by 0x400BAF4: dl_open_worker_begin (dl-open.c:534)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 94 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5AB9D63: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::str, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::str (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:176)
==7448==    by 0x5AB1C0A: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#1}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9DC1: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1933)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 95 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABA09D: void pybind11::cpp_function::initialize<pybind11::str (*&)(pybind11::handle), pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*&)(pybind11::handle), pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:176)
==7448==    by 0x5AB1CB7: pybind11::cpp_function::cpp_function<pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:91)
==7448==    by 0x5AA9E6E: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1943)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 96 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABA443: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::str, pybind11::handle, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::str (*)(pybind11::handle), pybind11::name const&, pybind11::is_method const&) (pybind11.h:176)
==7448==    by 0x5AB1E9E: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#2}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AA9F4A: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1945)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 97 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABA6FD: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (*)(pybind11::handle), pybind11::name const&) (pybind11.h:176)
==7448==    by 0x5AB1F9F: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#3}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AA9FF8: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1954)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 98 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABAA35: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::dict, pybind11::handle, pybind11::name>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::dict (*)(pybind11::handle), pybind11::name const&) (pybind11.h:176)
==7448==    by 0x5AB2181: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}, pybind11::name, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::handle)#4}&&, pybind11::name const&) (pybind11.h:100)
==7448==    by 0x5AAA108: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:1977)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 99 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABCFF7: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:176)
==7448==    by 0x5AB2CD1: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#18}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAACC6: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2043)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 100 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABD281: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, bool, pybind11::object const&, pybind11::object const&, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, bool (*)(pybind11::object const&, pybind11::object const&), pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:176)
==7448==    by 0x5AB2D51: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&, pybind11::object const&)#19}&&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AAAD96: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2044)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 101 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABDF53: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:176)
==7448==    by 0x5AB2FC6: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB187: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2060)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 102 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ABE1FD: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:176)
==7448==    by 0x5AB303C: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#25}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB219: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2063)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 103 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5AD6A71: void pybind11::cpp_function::initialize<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, void, pybind11::detail::value_and_holder&, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:176)
==7448==    by 0x5AD3BCF: pybind11::cpp_function::cpp_function<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::detail::is_new_style_constructor, pybind11::arg, void>(pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5ACD61A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) &&::{lambda(pybind11::detail::value_and_holder&, int)#1}, pybind11::detail::is_new_style_constructor, pybind11::arg>(char const*, pybind11::class_<Dune::Python::IGA::Reader>&&, pybind11::detail::is_new_style_constructor const&, pybind11::arg const&) (pybind11.h:1558)
==7448==    by 0x5AC5E7F: void pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>::execute<pybind11::class_<Dune::Python::IGA::Reader>, pybind11::arg>(pybind11::class_<Dune::Python::IGA::Reader>&, pybind11::arg const&) && (init.h:287)
==7448==    by 0x5ABEEF3: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type (), pybind11::arg>(pybind11::detail::initimpl::factory<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(int)#1}, pybind11::detail::void_type (*)(), Dune::Python::IGA::Reader (int), pybind11::detail::void_type ()>&&, pybind11::arg const&) (pybind11.h:1609)
==7448==    by 0x5AB394E: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2155)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 104 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ACD89D: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int, Dune::Python::IGA::Reader>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, int (*)(Dune::Python::IGA::Reader)) (pybind11.h:176)
==7448==    by 0x5AC5EDD: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&, , void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:100)
==7448==    by 0x5ABEF30: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def_property_readonly<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#2} const&) (pybind11.h:1690)
==7448==    by 0x5AB396B: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2156)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 105 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ACDB6D: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:176)
==7448==    by 0x5AC5FC7: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF024: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#3}&&) (pybind11.h:1558)
==7448==    by 0x5AB3988: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2157)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 106 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5ACDDB9: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, int, Dune::Python::IGA::Reader, pybind11::name, pybind11::is_method, pybind11::sibling>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, int (*)(Dune::Python::IGA::Reader), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:176)
==7448==    by 0x5AC606F: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}, pybind11::name, pybind11::is_method, pybind11::sibling, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&, pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&) (pybind11.h:100)
==7448==    by 0x5ABF15A: pybind11::class_<Dune::Python::IGA::Reader>& pybind11::class_<Dune::Python::IGA::Reader>::def<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}>(char const*, pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(Dune::Python::IGA::Reader)#4}&&) (pybind11.h:1558)
==7448==    by 0x5AB39A5: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2158)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 128 bytes in 1 blocks are still reachable in loss record 107 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA298A: pybind11::cpp_function::make_function_record() (pybind11.h:162)
==7448==    by 0x5AC6239: void pybind11::cpp_function::initialize<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, void, pybind11::detail::value_and_holder&, int, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, void (*)(pybind11::detail::value_and_holder&, int), pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:176)
==7448==    by 0x5ABF294: pybind11::cpp_function::cpp_function<pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}, pybind11::detail::is_new_style_constructor, pybind11::name, pybind11::is_method, pybind11::arg, void>(pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*)::{lambda(pybind11::detail::value_and_holder&, int)#5}&&, pybind11::detail::is_new_style_constructor const&, pybind11::name const&, pybind11::is_method const&, pybind11::arg const&) (pybind11.h:100)
==7448==    by 0x5AB3A0D: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2159)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 128 bytes in 2 blocks are still reachable in loss record 108 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4002447: malloc (rtld-malloc.h:56)
==7448==    by 0x4002447: _dl_map_object_deps (dl-deps.c:422)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448==    by 0x4CAC388: dlopen_implementation (dlopen.c:71)
==7448==    by 0x4CAC388: dlopen@@GLIBC_2.34 (dlopen.c:81)
==7448== 
==7448== 152 bytes in 1 blocks are still reachable in loss record 109 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5AA75FC: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1304)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C77C1: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C77C1: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C77C1: call_function (ceval.c:5891)
==7448==    by 0x48C77C1: _PyEval_EvalFrameDefault (ceval.c:4181)
==7448== 
==7448== 167 bytes in 1 blocks are still reachable in loss record 110 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C590C7: new_composite_name (setlocale.c:170)
==7448==    by 0x4C5957C: setlocale (setlocale.c:437)
==7448==    by 0x4A6683C: _Py_SetLocaleFromEnv (pylifecycle.c:436)
==7448==    by 0x4A63384: _PyPreConfig_Write (preconfig.c:980)
==7448==    by 0x4A66A40: _Py_PreInitializeFromPyArgv (pylifecycle.c:913)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 168 bytes in 1 blocks are still reachable in loss record 111 of 135
==7448==    at 0x484582F: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C67FE8: __add_to_environ (setenv.c:156)
==7448==    by 0x484BCBF: setenv (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4A9643A: os_putenv_impl (posixmodule.c:11013)
==7448==    by 0x4A9643A: os_putenv (posixmodule.c.h:6360)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C5F6B: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C5F6B: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C5F6B: call_function (ceval.c:5891)
==7448==    by 0x48C5F6B: _PyEval_EvalFrameDefault (ceval.c:4213)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4998D4E: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x4998D4E: vectorcall_unbound (typeobject.c:1629)
==7448==    by 0x4998D4E: vectorcall_method (typeobject.c:1661)
==7448==    by 0x4998EFA: slot_mp_ass_subscript (typeobject.c:7273)
==7448==    by 0x48C16D0: _PyEval_EvalFrameDefault (ceval.c:2372)
==7448==    by 0x4A2315D: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2315D: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x4A2315D: PyEval_EvalCode (ceval.c:1134)
==7448==    by 0x4A6D048: run_eval_code_obj (pythonrun.c:1291)
==7448==    by 0x4A6D048: run_mod (pythonrun.c:1312)
==7448== 
==7448== 176 bytes in 2 blocks are still reachable in loss record 112 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400291F: malloc (rtld-malloc.h:56)
==7448==    by 0x400291F: _dl_map_object_deps (dl-deps.c:463)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448==    by 0x4CAC388: dlopen_implementation (dlopen.c:71)
==7448==    by 0x4CAC388: dlopen@@GLIBC_2.34 (dlopen.c:81)
==7448== 
==7448== 208 bytes in 1 blocks are still reachable in loss record 113 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C58509: __gconv_lookup_cache (gconv_cache.c:365)
==7448==    by 0x4C4FBDA: __gconv_find_transform (gconv_db.c:732)
==7448==    by 0x4CE452A: __wcsmbs_getfct (wcsmbsload.c:91)
==7448==    by 0x4CE452A: __wcsmbs_load_conv (wcsmbsload.c:187)
==7448==    by 0x4CD8CB8: get_gconv_fcts (wcsmbsload.h:71)
==7448==    by 0x4CD8CB8: wcsrtombs (wcsrtombs.c:52)
==7448==    by 0x4C73390: wcstombs (wcstombs.c:34)
==7448==    by 0x4A8A468: _Py_wfopen (fileutils.c:1585)
==7448==    by 0x4A8D508: calculate_open_pyenv (getpath.c:1218)
==7448==    by 0x4A8D508: calculate_read_pyenv (getpath.c:1264)
==7448==    by 0x4A8D508: calculate_path (getpath.c:1509)
==7448==    by 0x4A8D508: _PyPathConfig_Calculate (getpath.c:1602)
==7448==    by 0x4A6110D: pathconfig_init (pathconfig.c:354)
==7448==    by 0x4A6110D: config_init_pathconfig (pathconfig.c:369)
==7448==    by 0x4A6110D: _PyConfig_InitPathConfig (pathconfig.c:438)
==7448==    by 0x4A65503: init_interp_main (pylifecycle.c:1082)
==7448==    by 0x4A663F4: pyinit_main (pylifecycle.c:1195)
==7448==    by 0x4A6783A: Py_InitializeFromConfig (pylifecycle.c:1226)
==7448== 
==7448== 208 bytes in 1 blocks are still reachable in loss record 114 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C585DB: __gconv_lookup_cache (gconv_cache.c:365)
==7448==    by 0x4C4FBDA: __gconv_find_transform (gconv_db.c:732)
==7448==    by 0x4CE4563: __wcsmbs_getfct (wcsmbsload.c:91)
==7448==    by 0x4CE4563: __wcsmbs_load_conv (wcsmbsload.c:190)
==7448==    by 0x4CD8CB8: get_gconv_fcts (wcsmbsload.h:71)
==7448==    by 0x4CD8CB8: wcsrtombs (wcsrtombs.c:52)
==7448==    by 0x4C73390: wcstombs (wcstombs.c:34)
==7448==    by 0x4A8A468: _Py_wfopen (fileutils.c:1585)
==7448==    by 0x4A8D508: calculate_open_pyenv (getpath.c:1218)
==7448==    by 0x4A8D508: calculate_read_pyenv (getpath.c:1264)
==7448==    by 0x4A8D508: calculate_path (getpath.c:1509)
==7448==    by 0x4A8D508: _PyPathConfig_Calculate (getpath.c:1602)
==7448==    by 0x4A6110D: pathconfig_init (pathconfig.c:354)
==7448==    by 0x4A6110D: config_init_pathconfig (pathconfig.c:369)
==7448==    by 0x4A6110D: _PyConfig_InitPathConfig (pathconfig.c:438)
==7448==    by 0x4A65503: init_interp_main (pylifecycle.c:1082)
==7448==    by 0x4A663F4: pyinit_main (pylifecycle.c:1195)
==7448==    by 0x4A6783A: Py_InitializeFromConfig (pylifecycle.c:1226)
==7448== 
==7448== 250 bytes in 7 blocks are still reachable in loss record 115 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4CC5789: strdup (strdup.c:42)
==7448==    by 0x5AA2AAF: pybind11::cpp_function::strdup_guard::operator()(char const*) (pybind11.h:325)
==7448==    by 0x5AA3753: pybind11::cpp_function::initialize_generic(std::unique_ptr<pybind11::detail::function_record, pybind11::cpp_function::InitializingFunctionRecordDeleter>&&, char const*, std::type_info const* const*, unsigned long) (pybind11.h:459)
==7448==    by 0x5ABE02C: void pybind11::cpp_function::initialize<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::int_, pybind11::object const&, pybind11::name, pybind11::is_method>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::int_ (*)(pybind11::object const&), pybind11::name const&, pybind11::is_method const&) (pybind11.h:297)
==7448==    by 0x5AB2FC6: pybind11::cpp_function::cpp_function<pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}, pybind11::name, pybind11::is_method, void>(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object const&)#24}&&, pybind11::name const&, pybind11::is_method const&) (pybind11.h:100)
==7448==    by 0x5AAB187: pybind11::detail::enum_base::init(bool, bool) (pybind11.h:2060)
==7448==    by 0x5AB390C: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2153)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 472 bytes in 1 blocks are still reachable in loss record 116 of 135
==7448==    at 0x4840F2F: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5A9C08C: pybind11::detail::get_internals() (internals.h:456)
==7448==    by 0x5A95E54: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C77C1: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C77C1: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C77C1: call_function (ceval.c:5891)
==7448==    by 0x48C77C1: _PyEval_EvalFrameDefault (ceval.c:4181)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448==    by 0x48C4E5F: _PyObject_VectorcallTstate (abstract.h:114)
==7448==    by 0x48C4E5F: PyObject_Vectorcall (abstract.h:123)
==7448==    by 0x48C4E5F: call_function (ceval.c:5891)
==7448==    by 0x48C4E5F: _PyEval_EvalFrameDefault (ceval.c:4198)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 576 bytes in 1 blocks are still reachable in loss record 117 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x495C606: new_keys_object (dictobject.c:600)
==7448==    by 0x495C780: dictresize (dictobject.c:1242)
==7448==    by 0x495FC6A: insertion_resize (dictobject.c:1060)
==7448==    by 0x495FC6A: insertdict (dictobject.c:1103)
==7448==    by 0x4974DD1: _PyObject_GenericSetAttrWithDict (object.c:1394)
==7448==    by 0x499C09F: type_setattro (typeobject.c:4012)
==7448==    by 0x5A9FFF5: pybind11_meta_setattro (class.h:164)
==7448==    by 0x4973A2F: PyObject_SetAttr (object.c:1044)
==7448==    by 0x4973BA4: PyObject_SetAttrString (object.c:843)
==7448==    by 0x5A990F4: pybind11::setattr(pybind11::handle, char const*, pybind11::handle) (pytypes.h:811)
==7448==    by 0x5A993E8: pybind11::detail::accessor_policies::str_attr::set(pybind11::handle, char const*, pybind11::handle) (pytypes.h:959)
==7448== 
==7448== 720 bytes in 1 blocks are still reachable in loss record 118 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x4984826: _PyStructSequence_InitType (structseq.c:498)
==7448==    by 0x4A7C35C: _PySys_InitCore (sysmodule.c:2874)
==7448==    by 0x4A7C35C: _PySys_Create (sysmodule.c:3116)
==7448==    by 0x4A63F57: pycore_interp_init (pylifecycle.c:824)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 768 bytes in 1 blocks are still reachable in loss record 119 of 135
==7448==    at 0x48406C4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4979629: PyMem_RawRealloc (obmalloc.c:590)
==7448==    by 0x4979629: new_arena (obmalloc.c:1573)
==7448==    by 0x4979629: allocate_from_new_pool (obmalloc.c:1787)
==7448==    by 0x49797E4: pymalloc_alloc (obmalloc.c:1951)
==7448==    by 0x49797E4: _PyObject_Malloc (obmalloc.c:1961)
==7448==    by 0x495BE5E: _PyLong_New (longobject.c:138)
==7448==    by 0x495BE5E: _PyLong_Init (longobject.c:5771)
==7448==    by 0x4A63CF8: pycore_init_singletons (pylifecycle.c:661)
==7448==    by 0x4A63CF8: pycore_interp_init (pylifecycle.c:799)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 792 bytes in 1 blocks are still reachable in loss record 120 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4C5A1AD: _nl_intern_locale_data (loadlocale.c:156)
==7448==    by 0x4C5A444: _nl_load_locale (loadlocale.c:332)
==7448==    by 0x4C59EB1: _nl_find_locale (findlocale.c:237)
==7448==    by 0x4C59523: setlocale (setlocale.c:414)
==7448==    by 0x4A66750: _Py_CoerceLegacyLocale (pylifecycle.c:351)
==7448==    by 0x4A62E76: _PyPreConfig_Read (preconfig.c:887)
==7448==    by 0x4A66A2E: _Py_PreInitializeFromPyArgv (pylifecycle.c:908)
==7448==    by 0x4A8E88A: pymain_init (main.c:46)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 944 bytes in 1 blocks are still reachable in loss record 121 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x4A92724: _PyObject_GC_Alloc (gcmodule.c:2280)
==7448==    by 0x4A92724: _PyObject_GC_Malloc (gcmodule.c:2307)
==7448==    by 0x4989225: PyType_GenericAlloc (typeobject.c:1156)
==7448==    by 0x5AA1E8B: pybind11::detail::make_new_python_type(pybind11::detail::type_record const&) (class.h:666)
==7448==    by 0x5AA75E8: pybind11::detail::generic_type::initialize(pybind11::detail::type_record const&) (pybind11.h:1301)
==7448==    by 0x5ABEE49: pybind11::class_<Dune::Python::IGA::Reader>::class_<>(pybind11::handle, char const*) (pybind11.h:1536)
==7448==    by 0x5AB38C3: pybind11::enum_<Dune::Python::IGA::Reader>::enum_<>(pybind11::handle const&, char const*) (pybind11.h:2150)
==7448==    by 0x5A95F96: pybind11_init__iga(pybind11::module_&) (_iga.cc:10)
==7448==    by 0x5A95E82: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448== 
==7448== 1,303 bytes in 8 blocks are still reachable in loss record 122 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4005EBD: malloc (rtld-malloc.h:56)
==7448==    by 0x4005EBD: fillin_rpath.isra.0 (dl-load.c:532)
==7448==    by 0x4006092: decompose_rpath (dl-load.c:654)
==7448==    by 0x400824B: _dl_map_object (dl-load.c:2111)
==7448==    by 0x4002280: openaux (dl-deps.c:64)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x40025E9: _dl_map_object_deps (dl-deps.c:232)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448== 
==7448== 2,048 bytes in 1 blocks are still reachable in loss record 123 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4978EB2: PyMem_RawCalloc (obmalloc.c:581)
==7448==    by 0x4978EB2: arena_map_get (obmalloc.c:1435)
==7448==    by 0x4978EB2: arena_map_mark_used (obmalloc.c:1478)
==7448==    by 0x4979473: new_arena (obmalloc.c:1607)
==7448==    by 0x4979473: allocate_from_new_pool (obmalloc.c:1787)
==7448==    by 0x49797E4: pymalloc_alloc (obmalloc.c:1951)
==7448==    by 0x49797E4: _PyObject_Malloc (obmalloc.c:1961)
==7448==    by 0x495BE5E: _PyLong_New (longobject.c:138)
==7448==    by 0x495BE5E: _PyLong_Init (longobject.c:5771)
==7448==    by 0x4A63CF8: pycore_init_singletons (pylifecycle.c:661)
==7448==    by 0x4A63CF8: pycore_interp_init (pylifecycle.c:799)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 2,461 bytes in 2 blocks are still reachable in loss record 124 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400AD59: calloc (rtld-malloc.h:44)
==7448==    by 0x400AD59: _dl_new_object (dl-object.c:92)
==7448==    by 0x400671E: _dl_map_object_from_fd (dl-load.c:1063)
==7448==    by 0x4008164: _dl_map_object (dl-load.c:2272)
==7448==    by 0x4002280: openaux (dl-deps.c:64)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x40025E9: _dl_map_object_deps (dl-deps.c:232)
==7448==    by 0x400BB5C: dl_open_worker_begin (dl-open.c:592)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448== 
==7448== 2,551 bytes in 2 blocks are still reachable in loss record 125 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400AD59: calloc (rtld-malloc.h:44)
==7448==    by 0x400AD59: _dl_new_object (dl-object.c:92)
==7448==    by 0x400671E: _dl_map_object_from_fd (dl-load.c:1063)
==7448==    by 0x4008164: _dl_map_object (dl-load.c:2272)
==7448==    by 0x400BAF4: dl_open_worker_begin (dl-open.c:534)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448== 
==7448== 2,736 bytes in 4 blocks are still reachable in loss record 126 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4012843: calloc (rtld-malloc.h:44)
==7448==    by 0x4012843: _dl_check_map_versions (dl-version.c:280)
==7448==    by 0x400BBA5: dl_open_worker_begin (dl-open.c:600)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448==    by 0x4CAC388: dlopen_implementation (dlopen.c:71)
==7448==    by 0x4CAC388: dlopen@@GLIBC_2.34 (dlopen.c:81)
==7448== 
==7448== 2,832 bytes in 3 blocks are still reachable in loss record 127 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x4A92724: _PyObject_GC_Alloc (gcmodule.c:2280)
==7448==    by 0x4A92724: _PyObject_GC_Malloc (gcmodule.c:2307)
==7448==    by 0x4989225: PyType_GenericAlloc (typeobject.c:1156)
==7448==    by 0x5A9FDAD: pybind11::detail::make_static_property_type() (class.h:72)
==7448==    by 0x5A9C1E1: pybind11::detail::get_internals() (internals.h:478)
==7448==    by 0x5A95E54: PyInit__iga (_iga.cc:8)
==7448==    by 0x4A50F36: _PyImport_LoadDynamicModuleWithSpec (importdl.c:167)
==7448==    by 0x4A4D2E4: _imp_create_dynamic_impl (import.c:2050)
==7448==    by 0x4A4D2E4: _imp_create_dynamic (import.c.h:330)
==7448==    by 0x496FBEC: cfunction_vectorcall_FASTCALL (methodobject.c:430)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448==    by 0x4A2332F: _PyEval_EvalFrame (pycore_ceval.h:46)
==7448==    by 0x4A2332F: _PyEval_Vector (ceval.c:5065)
==7448== 
==7448== 3,661 bytes in 6 blocks are still reachable in loss record 128 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x49A9377: PyUnicode_New (unicodeobject.c:1463)
==7448==    by 0x49DC9F9: unicode_decode_utf8 (unicodeobject.c:5203)
==7448==    by 0x498E5D8: type_dict_set_doc (typeobject.c:6074)
==7448==    by 0x498E5D8: type_ready_fill_dict (typeobject.c:6110)
==7448==    by 0x498E5D8: type_ready (typeobject.c:6339)
==7448==    by 0x498D1A1: PyType_Ready (typeobject.c:6372)
==7448==    by 0x49904AA: type_ready_set_bases (typeobject.c:6007)
==7448==    by 0x49904AA: type_ready (typeobject.c:6330)
==7448==    by 0x498D1A1: PyType_Ready (typeobject.c:6372)
==7448==    by 0x4975BA6: _PyTypes_Init (object.c:1811)
==7448==    by 0x4A64094: pycore_init_types (pylifecycle.c:699)
==7448==    by 0x4A64094: pycore_interp_init (pylifecycle.c:810)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448== 
==7448== 4,064 bytes in 1 blocks are still reachable in loss record 129 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400980E: calloc (rtld-malloc.h:44)
==7448==    by 0x400980E: do_lookup_unique (dl-lookup.c:272)
==7448==    by 0x400980E: do_lookup_x (dl-lookup.c:488)
==7448==    by 0x4009B37: _dl_lookup_symbol_x (dl-lookup.c:776)
==7448==    by 0x400E500: resolve_map (dl-reloc.c:190)
==7448==    by 0x400E500: elf_machine_rela (dl-machine.h:271)
==7448==    by 0x400E500: elf_dynamic_do_Rela (do-rel.h:147)
==7448==    by 0x400E500: _dl_relocate_object (dl-reloc.c:301)
==7448==    by 0x400BCF9: dl_open_worker_begin (dl-open.c:702)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448== 
==7448== 4,608 bytes in 2 blocks are possibly lost in loss record 130 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x400425B: malloc (rtld-malloc.h:56)
==7448==    by 0x400425B: _dlfo_mappings_segment_allocate (dl-find_object.c:217)
==7448==    by 0x400425B: _dl_find_object_update_1 (dl-find_object.c:671)
==7448==    by 0x400425B: _dl_find_object_update (dl-find_object.c:805)
==7448==    by 0x400BE27: dl_open_worker_begin (dl-open.c:735)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B2B5: dl_open_worker (dl-open.c:782)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448==    by 0x4CAC388: dlopen_implementation (dlopen.c:71)
==7448==    by 0x4CAC388: dlopen@@GLIBC_2.34 (dlopen.c:81)
==7448== 
==7448== 5,381 bytes in 6 blocks are still reachable in loss record 131 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x49A9377: PyUnicode_New (unicodeobject.c:1463)
==7448==    by 0x49DC9F9: unicode_decode_utf8 (unicodeobject.c:5203)
==7448==    by 0x498E5D8: type_dict_set_doc (typeobject.c:6074)
==7448==    by 0x498E5D8: type_ready_fill_dict (typeobject.c:6110)
==7448==    by 0x498E5D8: type_ready (typeobject.c:6339)
==7448==    by 0x498D1A1: PyType_Ready (typeobject.c:6372)
==7448==    by 0x4A5FF31: PyModule_AddType (modsupport.c:706)
==7448==    by 0x4ADB10B: PyInit__io (_iomodule.c:729)
==7448==    by 0x4A4E907: create_builtin.part.0.isra.0 (import.c:1013)
==7448==    by 0x4A4EA1F: create_builtin (import.c:1000)
==7448==    by 0x4A4EA1F: _imp_create_builtin (import.c:1064)
==7448==    by 0x496F809: cfunction_vectorcall_O (methodobject.c:516)
==7448==    by 0x48C36CE: do_call_core (ceval.c:5943)
==7448==    by 0x48C36CE: _PyEval_EvalFrameDefault (ceval.c:4277)
==7448== 
==7448== 8,192 bytes in 1 blocks are still reachable in loss record 132 of 135
==7448==    at 0x48455EF: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x4978EEA: PyMem_RawCalloc (obmalloc.c:581)
==7448==    by 0x4978EEA: arena_map_get (obmalloc.c:1423)
==7448==    by 0x4978EEA: arena_map_mark_used (obmalloc.c:1478)
==7448==    by 0x4979473: new_arena (obmalloc.c:1607)
==7448==    by 0x4979473: allocate_from_new_pool (obmalloc.c:1787)
==7448==    by 0x49797E4: pymalloc_alloc (obmalloc.c:1951)
==7448==    by 0x49797E4: _PyObject_Malloc (obmalloc.c:1961)
==7448==    by 0x495BE5E: _PyLong_New (longobject.c:138)
==7448==    by 0x495BE5E: _PyLong_Init (longobject.c:5771)
==7448==    by 0x4A63CF8: pycore_init_singletons (pylifecycle.c:661)
==7448==    by 0x4A63CF8: pycore_interp_init (pylifecycle.c:799)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448==    by 0x4A8FBAE: pymain_main (main.c:687)
==7448==    by 0x4A8FBAE: Py_BytesMain (main.c:720)
==7448==    by 0x4C4E189: (below main) (libc_start_call_main.h:58)
==7448== 
==7448== 9,248 bytes in 1 blocks are still reachable in loss record 133 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x495C4EE: new_keys_object (dictobject.c:600)
==7448==    by 0x495C780: dictresize (dictobject.c:1242)
==7448==    by 0x495FC6A: insertion_resize (dictobject.c:1060)
==7448==    by 0x495FC6A: insertdict (dictobject.c:1103)
==7448==    by 0x498747B: add_subclass (typeobject.c:6411)
==7448==    by 0x498ECA2: type_ready_add_subclasses (typeobject.c:6258)
==7448==    by 0x498ECA2: type_ready (typeobject.c:6348)
==7448==    by 0x4992B51: PyType_Ready (typeobject.c:6372)
==7448==    by 0x4992B51: PyType_FromModuleAndSpec (typeobject.c:3561)
==7448==    by 0x4AC21EC: operator_exec (_operator.c:1749)
==7448==    by 0x4971733: PyModule_ExecDef (moduleobject.c:407)
==7448==    by 0x4A4D79A: _imp_exec_builtin (import.c.h:383)
==7448==    by 0x496F809: cfunction_vectorcall_O (methodobject.c:516)
==7448== 
==7448== 68,408 bytes in 70 blocks are still reachable in loss record 134 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x49797FF: PyMem_RawMalloc (obmalloc.c:572)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1966)
==7448==    by 0x49797FF: _PyObject_Malloc (obmalloc.c:1959)
==7448==    by 0x495C606: new_keys_object (dictobject.c:600)
==7448==    by 0x495C780: dictresize (dictobject.c:1242)
==7448==    by 0x496450A: insertion_resize (dictobject.c:1060)
==7448==    by 0x496450A: PyDict_SetDefault (dictobject.c:3067)
==7448==    by 0x498E575: type_add_getset (typeobject.c:5672)
==7448==    by 0x498E575: type_ready_fill_dict (typeobject.c:6107)
==7448==    by 0x498E575: type_ready (typeobject.c:6339)
==7448==    by 0x498D1A1: PyType_Ready (typeobject.c:6372)
==7448==    by 0x4975B6A: _PyTypes_Init (object.c:1804)
==7448==    by 0x4A64094: pycore_init_types (pylifecycle.c:699)
==7448==    by 0x4A64094: pycore_interp_init (pylifecycle.c:810)
==7448==    by 0x4A67182: pyinit_config (pylifecycle.c:866)
==7448==    by 0x4A67182: pyinit_core.constprop.0 (pylifecycle.c:1029)
==7448==    by 0x4A677AE: Py_InitializeFromConfig (pylifecycle.c:1219)
==7448==    by 0x4A8E8CA: pymain_init (main.c:66)
==7448== 
==7448== 72,704 bytes in 1 blocks are still reachable in loss record 135 of 135
==7448==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7448==    by 0x5BB37B9: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==7448==    by 0x4004ABD: call_init (dl-init.c:70)
==7448==    by 0x4004ABD: call_init (dl-init.c:26)
==7448==    by 0x4004BA3: _dl_init (dl-init.c:117)
==7448==    by 0x4D75E43: _dl_catch_exception (dl-error-skeleton.c:182)
==7448==    by 0x400B30D: dl_open_worker (dl-open.c:808)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x400B6A7: _dl_open (dl-open.c:884)
==7448==    by 0x4CAC2D7: dlopen_doit (dlopen.c:56)
==7448==    by 0x4D75DE9: _dl_catch_exception (dl-error-skeleton.c:208)
==7448==    by 0x4D75E9E: _dl_catch_error (dl-error-skeleton.c:227)
==7448==    by 0x4CABDC6: _dlerror_run (dlerror.c:138)
==7448== 
==7448== LEAK SUMMARY:
==7448==    definitely lost: 0 bytes in 0 blocks
==7448==    indirectly lost: 0 bytes in 0 blocks
==7448==      possibly lost: 4,656 bytes in 4 blocks
==7448==    still reachable: 196,770 bytes in 254 blocks
==7448==         suppressed: 0 bytes in 0 blocks
==7448== 
==7448== For lists of detected and suppressed errors, rerun with: -s
==7448== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
